AWSTemplateFormatVersion: '2010-09-09'
Description: Base infra to use with AeroCTL

Parameters:
  BucketPath:
    Description: URL to get resource of build
    Type: String
    Default: aerodrome-ctl/root/
  BucketFile:
    Description: URL to get resource of build
    Type: String
    Default: buildspec.yml
  ProjectImage:
    Description: Image to use with project build
    Type: String
    Default: aws/codebuild/standard:5.0
  ProjectComputer:
    Description: Type of computer to use
    Type: String
    Default: BUILD_GENERAL1_SMALL
  ProjectType:
    Description: Type of SO
    Type: String
    Default: LINUX_CONTAINER
  CodeBuildRoleName:
    Description: Name of role to use with codebuild
    Type: String
    Default: aerodromecode
  AerodromeSecretsCredentialsName:
    Description: Name of SecretsManager
    Type: String
    Default: 'AerodromeSecretsCredentials'

Resources:
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Ref CodeBuildRoleName
      AssumeRolePolicyDocument:
        Statement:
        - Action: [ 'sts:AssumeRole' ]
          Effect: Allow
          Principal:
            Service: [ codebuild.amazonaws.com ]
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: CodeBuildAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                - 'logs:*'
                - 'ec2:CreateNetworkInterface'
                - 'ec2:DescribeNetworkInterfaces'
                - 'ec2:DeleteNetworkInterface'
                - 'ec2:DescribeSubnets'
                - 'ec2:DescribeSecurityGroups'
                - 'ec2:DescribeDhcpOptions'
                - 'ec2:DescribeVpcs'
                - 'ec2:CreateNetworkInterfacePermission'
                - 'ecr:*'
                Effect: Allow
                Resource: '*'
              - Action:
                - 's3:*'
                Effect: Allow
                Resource: '*'
              - Action:
                - 'cloudformation:*'
                Effect: Allow
                Resource: '*'
              - Action:
                - 'secretsmanager:*'
                Effect: Allow
                Resource: '*'

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: aerocodebuild
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: NO_ARTIFACTS
      Environment:
        Type: !Ref ProjectType
        ComputeType: !Ref ProjectComputer
        Image: !Ref ProjectImage
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: true
      Source:
        Type: S3
        BuildSpec: !Ref BucketFile
        Location: !Ref BucketPath
      TimeoutInMinutes: 10
      VpcConfig:
        VpcId: !ImportValue AerodromeVPC
        Subnets: [ !ImportValue AerodromePrivateSubnet1 ]
        SecurityGroupIds: [ !ImportValue AerodromeSecurityGroupId ]

  AerodromeIAMUser:
    Type: AWS::IAM::User
    Properties:
      Path: "/"
      Policies:
      - PolicyName: AerodromeTaskExecution
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - ecs:*
            - cloudformation:*
            - ec2:*
            - iam:*
            - logs:*
            Resource: "*"

  AerodromeCredentials:
    Type: AWS::IAM::AccessKey
    Properties: 
      UserName: !Ref AerodromeIAMUser

  AerodromeSecretsCredentials:
    Type: 'AWS::SecretsManager::Secret'
    Properties:
      Name: !Ref AerodromeSecretsCredentialsName
      Description: Secrets to AerodromeCredentials
      SecretString: !Join ['', ['{"accessKey":"', !Ref AerodromeCredentials, '","secretKey":"', !GetAtt AerodromeCredentials.SecretAccessKey, '"}']]

Outputs:
  ProjectName:
    Description: name of project codebuild
    Value: !Ref CodeBuildProject
    Export:
      Name: AerodromeCodeBuildName
  AerodromeIAMUser:
    Description: user of IAM to deploy
    Value: !Ref AerodromeIAMUser
    Export:
      Name: AerodromeIam
  AerodromeIAMAccessKey:
    Description: Secrets name of Iam user to deploy
    Value: !Ref AerodromeSecretsCredentialsName
    Export:
      Name: AerodromeSecretsCredentialsName
